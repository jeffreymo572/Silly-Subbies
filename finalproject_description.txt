Keyboard Interactivity (Yawer): The player can move the submarine with the use of 'wasd' and shoot with the space bar. I implemented an array of booleans for player inputs to allow for multiple keyboard inputs since processing only stores the last key the user inputted. This allows for diagonal movement as well as moving while shooting. I implemented acceleration-based movement to allow it to be a smoother experience. We also made the decision to have the submarine accelerate slower as it was going forward as a way to simulate going against a current. 

Data Input/Output (Yawer): I have implemented a highscore system to allow the saving and loading of a highscore. If the current run's score is higher than your highscore, it will save it as your new highscore and this will be loaded when you open the game again.

GUI (Jeffrey): The GUI features three distinct scenes: the main menu, the paused screen, and the current game screen. The main menu has two buttons: the play game button which will switch the scene from the main menu to an initialized game. The controls button will pull up a text box describing the controls.The paused screen scene can be activated during an active game by pressing "P" which will pause the game and prompt the user to unpause by pressing "P" again or pressing the resume button. The current game screen displays the current game as well as the high score at the top left. 

Sound (Jeffrey): The sound system features a SoundBoard class which controls which sounds are played. In the main menu and in game, the soundboard features looping background music depending on the scene. When the player shoots, dies, or kills an octopus, the soundboard will play its associated sound.